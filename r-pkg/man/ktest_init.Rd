% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tester.R
\name{ktest_init}
\alias{ktest_init}
\title{Generate a Ktest object that will be used to compute the specified
sample kernel-test-based comparison}
\usage{
ktest_init(
  data,
  metadata,
  sample_names = NULL,
  kernel_function = "gauss",
  kernel_bandwidth = "median",
  kernel_median_coef = 1,
  nystrom = FALSE,
  n_landmarks = NULL,
  landmark_method = "random",
  n_anchors = NULL,
  anchor_basis = "w",
  random_state = NULL
)
}
\arguments{
\item{data}{\code{matrix} or \code{data.frame}.
The data to test, containing two samples at the same time.
Rows correspond to observations/samples, and columns correspond to
features.}

\item{metadata}{\code{matrix} or \code{data.frame} with a single column.
The metadata associated with the data to test. The values should
indicate the labels of the samples in \code{'data'}. At the moment, the
library can only perform a two sample test, thus two or more levels
are expected but only the first two detected levels are used, or the
levels corresponding to the labels given in \code{samples_names}
(if provided). The first dimensions of \code{'data'} and \code{'metadata'},
corresponding to observations, should coincide.}

\item{sample_names}{NULL or \code{vector}.
If given, should contain exactly two strings, corresponding to
labels that should be selected for testing in the \code{metadata} table.
If NULL, sample names are derived from the metadata label levels
(the first two detected levels are used).}

\item{kernel_function}{character string or callable (function).
Specifies the kernel function. Acceptable values in the form of a
string are \code{'gauss'} (default) and \code{'linear'}. Pass a callable
for a user-defined kernel function.}

\item{kernel_bandwidth}{character string or numeric.
Value of the bandwidth for kernels using a bandwidth. If \code{'median'}
(default), the bandwidth will be set as the median or its multiple,
depending on the value of the parameter \code{kernel_median_coef}. Pass a
numeric for a user-defined value of the bandwidth.}

\item{kernel_median_coef}{numeric.
Multiple of the median to compute bandwidth if
\code{kernel_bandwidth = 'median'}. The default is 1.}

\item{nystrom}{logical.
If TRUE, computes the Nystrom approximation, and uses it to compute
the test statistics. The default if FALSE.}

\item{landmark_method}{\code{'random'} or \code{'kmeans++'}.
Method of the landmarks selection, \code{'random'} (default) corresponds
to selecting landmarks among the observations according to the
random uniform distribution.}

\item{n_anchors}{integer.
Number of anchors used in the Nystrom method, by default equal to
the number of landmarks.}

\item{anchor_basis}{character string.
Options for different ways of computing the covariance operator of
the landmarks in the Nystrom method, of which the anchors are the
eigenvalues. Possible values are \code{'w'} (default),\code{'s'} and \code{'k'}.}

\item{random_state}{integer or NULL.
Determines random number generation for the Nystrom approximation
and for the permutations. If NULL (default), the generator is
the RandomState instance used by Numpy (i.e. \code{np.random}) in Python.
To ensure the results are reproducible, pass an integer to
instanciate the seed, or a Python RandomState instance (recommended).}

\item{n_landmarks:}{integer.
Number of landmarks used in the Nystrom method. If unspecified, one
fifth of the observations are selected as landmarks.}
}
\value{
a \code{Ktest} object.
}
\description{
Ktest object can be used to perform kernel tests, such as maximal mean
discrepancy test (MMD) and a test based on kernel Fisher Discriminant
Analysis (kFDA).
}
\details{
See 'ktest' package vignette for more details and usage examples. You can
also refer to Ozier-Lafontaine et al (2024) for more details about the
methods.
}
\examples{
\dontrun{
# data loading
tmp <- load_example_data()
# gene expression data table (344 cells and 83 genes)
data_tab <- tmp$data_tab
# metadata table with sampling conditions (for the 344 cells)
metadata_tab <- tmp$metadata_tab

# create Ktest object
kt_1 = ktest_init(
    data = data_tab, metadata = metadata_tab, 
    sample_names = c('0H', '48HREV')
)
print(kt_1)
}
}
\references{
Ozier-Lafontaine A., Fourneaux C., Durif G., Arsenteva P., Vallot C.,
Gandrillon O., Gonin-Giraud S., Michel B., Picard F. (2024).
Kernel-Based Testing for Single-Cell Differential Analysis. Preprint.
\doi{10.48550/arXiv.2307.08509};
\href{https://arxiv.org/abs/2307.08509}{arXiv.2307.08509};
\href{https://hal.science/hal-04214858}{hal-04214858}.
}
\seealso{
\code{\link[=test]{test()}}, \code{\link[=get_pvalues]{get_pvalues()}}, \code{\link[=get_statistics]{get_statistics()}},
\code{\link[=get_proj]{get_proj()}}
}
