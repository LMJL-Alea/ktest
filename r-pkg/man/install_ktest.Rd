% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install_ktest}
\alias{install_ktest}
\title{Install Python dependency}
\usage{
install_ktest(
  envname = NULL,
  method = c("auto", "virtualenv", "conda"),
  conda = "auto",
  python_version = NULL,
  pip = FALSE,
  ...,
  pip_ignore_installed = ignore_installed,
  ignore_installed = FALSE
)
}
\arguments{
\item{envname}{The name, or full path, of the environment in which Python
packages are to be installed. When \code{NULL} (the default), the active
environment as set by the \code{RETICULATE_PYTHON_ENV} variable will be used;
if that is unset, then the \code{r-reticulate} environment will be used.}

\item{method}{Installation method. By default, "auto" automatically finds a
method that will work in the local environment. Change the default to force
a specific installation method. Note that the "virtualenv" method is not
available on Windows.}

\item{conda}{The path to a \code{conda} executable. Use \code{"auto"} to allow
\code{reticulate} to automatically find an appropriate \code{conda} binary.
See \strong{Finding Conda} and \code{\link[reticulate:conda_binary]{conda_binary()}} for more details.}

\item{python_version}{The requested Python version. Ignored when attempting
to install with a Python virtual environment.}

\item{pip}{Boolean; use \code{pip} for package installation? This is only relevant
when Conda environments are used, as otherwise packages will be installed
from the Conda repositories.}

\item{...}{Additional arguments passed to \code{\link[reticulate:conda_install]{conda_install()}}
or \code{\link[reticulate:virtualenv_install]{virtualenv_install()}}.}

\item{pip_ignore_installed, ignore_installed}{Boolean; whether pip should
ignore previously installed versions of the requested packages. Setting
this to \code{TRUE} causes pip to install the latest versions of all
dependencies into the requested environment. This ensure that no
dependencies are satisfied by a package that exists either in the site
library or was previously installed from a different--potentially
incompatible--distribution channel. (\code{ignore_installed} is an alias for
\code{pip_ignore_installed}, \code{pip_ignore_installed} takes precedence).}
}
\description{
The \code{ktest} R package relies on the \code{ktest} Python package
under the hood, thanks to the
\href{https://rstudio.github.io/reticulate/}{\code{reticulate}} package.
The \code{ktest} Python package should be installed for R \code{ktest} to run.
This function install Python \code{ktest} using the \code{reticulate} framework.
}
\details{
Python should be available on your system to install and use
Python \code{ktest}. You can run \code{\link[reticulate:py_discover_config]{reticulate::py_discover_config()}} to check
which version of Python will be used by \code{reticulate}.

To avoid messing with your system or user Python system environment, we
highly recommend using a Python virtual environment or a Conda environment
to install Python \code{ktest}.
See \href{https://rstudio.github.io/reticulate/articles/versions.html}{using Python with \code{reticulate}}
for more details.

See the specific \strong{"Install ktest" vignette} for more details:
\code{vignette("install_ktest", package = "ktest")}.

\strong{Important:} Python is a requirement as an intern machinery for the
package to work but you will not need to create nor manipulate Python
codes to use the RKeOps package.
}
\examples{
\dontrun{
# create Python environement
reticulate::virtualenv_create("ktest")
# activate Python environment
reticulate::use_virtualenv(virtualenv = "ktest", required = TRUE)
# check version of Python
reticulate::py_config()
# install pykest
install_ktest(method = "virtualenv", envname = "ktest")
}
}
